[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "fastapi-ddd-framework"
version = "0.1.0"
description = "A scalable FastAPI framework following DDD principles"
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
]

dependencies = [
    # Core FastAPI
    "fastapi>=0.108.0",
    "uvicorn[standard]>=0.25.0",
    
    # Data validation and settings
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Async support
    "asyncio-mqtt>=0.16.0",
    "aiofiles>=23.2.1",
    "aiohttp>=3.9.1",
    
    # Caching and queuing
    "redis>=5.0.1",
    "celery>=5.3.4",
    
    # AWS services
    "boto3>=1.34.0",
    "aioboto3>=12.3.0",
    
    # Logging and monitoring
    "structlog>=23.2.0",
    "python-json-logger>=2.0.7",
    
    # Utilities
    "python-multipart>=0.0.6",
    "python-dotenv>=1.0.0",
    "pyyaml>=6.0.1",
    "pytz>=2023.3",
    
    # HTTP client
    "httpx>=0.26.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.26.0",
    
    # Code quality
    "ruff>=0.1.8",
    "black>=23.12.0",
    "isort>=5.13.0",
    "mypy>=1.8.0",
    
    # Development tools
    "pre-commit>=3.6.0",
    "watchfiles>=0.21.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "httpx>=0.26.0",
]

prod = [
    "gunicorn>=21.2.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/fastapi-ddd-framework"
Documentation = "https://github.com/yourusername/fastapi-ddd-framework#readme"
Repository = "https://github.com/yourusername/fastapi-ddd-framework"

[tool.hatch.build.targets.wheel]
packages = ["app"]

[tool.ruff]
target-version = "py311"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
target-version = ['py311']
line-length = 100
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100
known_first_party = ["app"]
skip_glob = ["migrations/*"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = [
    "boto3.*",
    "celery.*",
    "redis.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"